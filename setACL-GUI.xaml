<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="SetACL PowerShell Studio" 
        Height="800" 
        Width="1024" 
        WindowStartupLocation="CenterScreen"
        BorderThickness="1"
        >
    <Window.Resources>
    
        <ContextMenu  x:Key="DataRowContextMenu" DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=DataGrid, Mode=FindAncestor}}">
            <MenuItem x:Name="permsAdd"  Header="Add New ACL" Command="{Binding EditResourceCommand}" CommandParameter="{Binding}" />
            <MenuItem x:Name="permsEdit"  Header="Edit ACL" Command="{Binding EditResourceCommand}" CommandParameter="{Binding}" />
            <MenuItem x:Name="permsRemove"  Header="Remove ACL" Command="{Binding EditResourceCommand}" CommandParameter="{Binding}" />
        </ContextMenu>
                    
                    
    <Style x:Key="btn" TargetType="Button">
        <Setter Property="FontFamily" Value="Helvetica Neue,Helvetica,Arial,sans-serif"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border Name="border" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid>
                            <Border Name="dropShadowBorder" CornerRadius="4" BorderBrush="Transparent" BorderThickness="0" Visibility="Hidden">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,0.16">
                                        <GradientStop Color="#22000000" Offset="0"/>
                                        <GradientStop Color="#00000000" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <ContentPresenter Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                         <!--default button highlight--> 
                        <Trigger Property="Button.IsDefaulted" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                         <!--inner drop shadow when pressed / checked--> 
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" TargetName="dropShadowBorder" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="dropShadowBorder" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.60"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btn-default" TargetType="Button" BasedOn="{StaticResource btn}">
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="#333"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="#fff"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="#ccc"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#e6e6e6"/>
                <Setter Property="BorderBrush" Value="#adadad"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#e6e6e6"/>
                <Setter Property="BorderBrush" Value="#adadad"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" Value="#e6e6e6"/>
                <Setter Property="BorderBrush" Value="#adadad"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="btn-primary" TargetType="Button" BasedOn="{StaticResource btn}">
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="#fff"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="#428bca"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="#357ebd"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#3071a9"/>
                <Setter Property="BorderBrush" Value="#285e8e"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#3071a9"/>
                <Setter Property="BorderBrush" Value="#285e8e"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" Value="#3071a9"/>
                <Setter Property="BorderBrush" Value="#285e8e"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="btn-success" TargetType="Button" BasedOn="{StaticResource btn}">
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="#fff"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="#5cb85c"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="#4cae4c"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#449d44"/>
                <Setter Property="BorderBrush" Value="#398439"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#449d44"/>
                <Setter Property="BorderBrush" Value="#398439"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" Value="#449d44"/>
                <Setter Property="BorderBrush" Value="#398439"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="btn-info" TargetType="Button" BasedOn="{StaticResource btn}">
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="#fff"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="#5bc0de"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="#46b8da"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#31b0d5"/>
                <Setter Property="BorderBrush" Value="#269abc"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#31b0d5"/>
                <Setter Property="BorderBrush" Value="#269abc"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" Value="#31b0d5"/>
                <Setter Property="BorderBrush" Value="#269abc"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="btn-warning" TargetType="Button" BasedOn="{StaticResource btn}">
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="#fff"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="#f0ad4e"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="#eea236"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#ec971f"/>
                <Setter Property="BorderBrush" Value="#d58512"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#ec971f"/>
                <Setter Property="BorderBrush" Value="#d58512"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" Value="#ec971f"/>
                <Setter Property="BorderBrush" Value="#d58512"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="btn-danger" TargetType="Button" BasedOn="{StaticResource btn}">
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="#fff"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="#d9534f"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="#d43f3a"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#c9302c"/>
                <Setter Property="BorderBrush" Value="#ac2925"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#c9302c"/>
                <Setter Property="BorderBrush" Value="#ac2925"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" Value="#c9302c"/>
                <Setter Property="BorderBrush" Value="#ac2925"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    </Window.Resources>
        
    <Grid>
    
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="1" />
            <RowDefinition Height="*" />
            <RowDefinition Height="1" />
            <RowDefinition Height="100" />
            <RowDefinition Height="1" />
            <RowDefinition Height="20" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="_File">
                    <MenuItem Header="_Open"/>
                    <MenuItem Header="_Close"/>
                    <MenuItem Header="_Save"/>
                </MenuItem>
            </Menu>
        </Grid>
        
        <Grid Grid.Row="1" Height="1" Background="#cccccc" />
        
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200" MinWidth="150" MaxWidth="300"/>
                <ColumnDefinition Width="1" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" Background="#eeeeee">
                <TreeView x:Name="treeObjects">
                    <TreeViewItem Header="Root" IsExpanded="True">
                        <TreeViewItem Header="FileSystem" />
                        <TreeViewItem Header="Printers" />
                        <TreeViewItem Header="Registry" />
                        <TreeViewItem Header="Services" />
                        <TreeViewItem Header="Shares" />
                    </TreeViewItem>
                </TreeView>
            </Grid>
            <GridSplitter Grid.Column="1" Width="1" HorizontalAlignment="Stretch" Background="#cccccc"/>
            <Grid Grid.Column="2">
                <DockPanel  Margin="10 10 10 0">
                    <Label DockPanel.Dock="Top" x:Name="selectedObject" Content="Computer" FontSize="20" FontWeight="Bold"/>
                    <Separator DockPanel.Dock="Top" />
                    <Label x:Name="selectedObjectType" Content="Object" DockPanel.Dock="Top" />
                    <Label x:Name="selectedObjectOwner" Content="Owner" FontSize="16" FontWeight="Bold" DockPanel.Dock="Top" />
                    <Label x:Name="selectedObjectOwnerTable" Content="Owner Table" DockPanel.Dock="Top" />
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                        <Label x:Name="perms" Content="Permissions" FontSize="16" FontWeight="Bold" DockPanel.Dock="Top" />
                        
                        <Button x:Name="btnShowAudit"  
                            Content = "Show Auditing" 
                            ClickMode = "Press" 
                            Style="{StaticResource btn-default}"/> 
                            
                        <Button x:Name="btnShowEffectivePerms"  
                            Content = "Show EffectivePerms" 
                            ClickMode = "Press" 
                            Style="{StaticResource btn-default}"/> 
                    </StackPanel>
                    
                    
        
                    <DataGrid x:Name="selectedObjectPermTable"  HorizontalAlignment="Stretch" Margin="0,5,0,0" VerticalAlignment="Stretch" Height="Auto" DockPanel.Dock="Top" CanUserSortColumns="True">
                         <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                
                                <Setter Property="ContextMenu" Value="{StaticResource DataRowContextMenu}" />
                            </Style>
                        </DataGrid.RowStyle>
                    
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Type" Binding="{Binding Type}" />
                            <DataGridTextColumn Header="Principal" Binding="{Binding Principal}" />
                            <DataGridTextColumn Header="Access" Binding="{Binding Access}" />
                            <DataGridTextColumn Header="Inherited" Binding="{Binding Inherited}" />
                            <DataGridTextColumn Header="Applies To" Binding="{Binding Applies To}" />
                        </DataGrid.Columns>
                    </DataGrid>
                    
                </DockPanel>
            
                <Border x:Name="Overlay" Panel.ZIndex="1000" Visibility="Collapsed" CornerRadius="1" BorderBrush="Gray" Background="LightGray" BorderThickness="2" DockPanel.Dock="Top"  HorizontalAlignment="Center" VerticalAlignment="Center">
                    <StackPanel   Orientation="Vertical" HorizontalAlignment="Center" Width="Auto">
                        <StackPanel.Background>
                            <SolidColorBrush Color="White" />
                        </StackPanel.Background>
                        <StackPanel Orientation="Horizontal">
                            <Label Width="150">Principal</Label>
                            <TextBox x:Name="permsPrincipal" Width="200" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label Width="150">Permissions</Label>
                            <StackPanel Orientation="Vertical">
                                <RadioButton x:Name="permsFC">Full Control</RadioButton>
                                <RadioButton x:Name="permsM">Modify</RadioButton>
                                <RadioButton x:Name="permsRE">Read and Execute</RadioButton>
                                <RadioButton x:Name="permsR">Read</RadioButton>
                                <RadioButton x:Name="permsW">Write</RadioButton>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label Width="150">Applies To</Label>
                            <StackPanel Orientation="Vertical">
                                <ComboBox x:Name="permsAppliesTo" Height="25" Width="200" IsEnabled="True" SelectedIndex="0">
                                    <ComboBoxItem Content="This Folder, Subfolders and Files"></ComboBoxItem>
                                    <ComboBoxItem Content="This Folder and Subfolders"></ComboBoxItem>
                                    <ComboBoxItem Content="This Folder and Files"></ComboBoxItem>
                                    <ComboBoxItem Content="This Folder Only"></ComboBoxItem>
                                    <ComboBoxItem Content="Subfolders and Files"></ComboBoxItem>                                    
                                    <ComboBoxItem Content="Subfolders Only"></ComboBoxItem>
                                    <ComboBoxItem Content="Files Only"></ComboBoxItem>
                                </ComboBox>
                            </StackPanel>
                        </StackPanel>
                        
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <Button Width="150" x:Name="permsExec" Style="{StaticResource btn-success}" Content="Execute"/>
                            <Button Width="150" x:Name="permsCancel" Style="{StaticResource btn-info}" Content="Cancel"/>
                        </StackPanel>
                    </StackPanel>            
                </Border>
            </Grid>
            
            
        </Grid>
        
        <GridSplitter Grid.Row="3" Height="1" HorizontalAlignment="Stretch"  Background="#cccccc"/>

        
        <Grid Grid.Row="4" Background="#ffffff">
             <TextBox x:Name="logfile" AcceptsReturn="True" ScrollViewer.VerticalScrollBarVisibility="Auto"  />
        </Grid>
        <GridSplitter Grid.Row="5" Height="1" HorizontalAlignment="Stretch"  Background="#cccccc"/>
        <Grid Grid.Row="6">
            <StatusBar Name="statusbar" DockPanel.Dock="Bottom">statusbar</StatusBar>
        </Grid> 
    </Grid>
    
</Window>
